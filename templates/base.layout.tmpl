{{define "base"}}
<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>My nice page</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    
    <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css"> 
    <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker.min.css">


    <style>
        .btn-outline-secondary {
            color: aqua;
            border-color: #6c757d;
        }
    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Navbar</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/about">About</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            Rooms
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="/generals-quarters">King's ROOM</a></li>
                            <li><a class="dropdown-item" href="/majors-suite">Queen-ROOM</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/search-availability" tabindex="-1" aria-disabled="true">Book
                            Now</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/contact" tabindex="-1" aria-disabled="true">Contact</a>
                    </li>
                </ul>
                <form class="d-flex">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form>
            </div>
        </div>
    </nav>

    {{block "content" .}}

    {{end}}


    <div class="row my-footer">
        <div class="col">
            Left
        </div>
        <div class="col">
            Middle
        </div>
        <div class="col">
            Right
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>



    {{block "js" .}}

    {{end}}
    

    <!--<script>


        /*console.log("CALLING PROMPT")
        let attention = prompt();

        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        


        document.addEventListener('DOMContentLoaded', function () {
            console.log("Inside DOMCONTENTLOADED")
            const startInput = document.querySelector('[name="start"]');
            const endInput = document.querySelector('[name="end"]');
            console.log("Start input:", startInput);
console.log("End input:", endInput);
console.log("Datepicker library:", typeof Datepicker);

            if (startInput && endInput) {
                console.log("Inside IF")
                // Initialize the DatePicker for both inputs
                const startPicker = new Datepicker(startInput, {
                    format: 'mm/dd/yyyy',
                    autohide: true,
                });

                const endPicker = new Datepicker(endInput, {
                    format: 'mm/dd/yyyy',
                    autohide: true,
                });

                // Additional logic can be added here to manage date ranges
            } else {
                console.error("Date inputs not found.");
            }
        });

        function notify(msg, msgType) {

            notie.alert({
                type: msgType, // optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
                text: msg,
            })
        }

        function notifyModal(title, text, icon, confirmButtonText) {
            Swal.fire({
                title: title,
                text: text,
                icon: icon,
                confirmButtonText: confirmButtonText
            })
        }

        function prompt() {
            console.log("Inside prompt()")

            let toast = function (c) {
                const {
                    msg = "",
                    icon = "success",
                    position = "top-end",
                } = c;

                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: position,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer);
                        toast.addEventListener('mouseleave', Swal.resumeTimer);
                    }
                });

                // Trigger the toast
                Toast.fire({});

            }

            let success = function () {
                console.log("clicked and got success");
            }


            async function custom(c) {
                console.log("async func Inside")
                const {
                    msg = html,
                    title = "Pick Your Dates",
                } = c;

                const { value: formValues } = await Swal.fire({
                    title: title,
                    html: msg,
                    backdrop: false,
                    focusConfirm: false,
                    showCancelButton: true,
                    willOpen: () => {
                        // I guess No need - after attribute "disabled" removed, creating date picker object
                        // Initialize the date pickers when the modal opens
                        //const startInput = document.getElementById('start');
                        //const endInput = document.getElementById('end');

                        //if (startInput && endInput) {
                        //Initialize Datepicker for start and end inputs
                        //new Datepicker(startInput, { format: 'mm/dd/yyyy', autohide: true });
                        //new Datepicker(endInput, { format: 'mm/dd/yyyy', autohide: true });
                        //} else {
                        //console.error("Start or End input not found for date picker.");
                        //}    
                        console.log("Inside Will Open")                   
                    },

                    preConfirm: () => {
                        return [
                            document.getElementById("start").value,
                            document.getElementById("end").value
                        ];
                    },

                    didOpen: () => {
                        console.log("Inside Did Open")
                        const startInput = document.getElementById('start');
                        const endInput = document.getElementById('end');

                        // Remove the disabled attribute
                        startInput.removeAttribute('disabled');
                        endInput.removeAttribute('disabled');

                        // Initialize Datepicker after enabling the inputs
                        new Datepicker(startInput, { format: 'mm/dd/yyyy', autohide: true });
                        new Datepicker(endInput, { format: 'mm/dd/yyyy', autohide: true });
                    },


                });
                if (formValues) {
                    Swal.fire(JSON.stringify(formValues));
                }
            }


            return {
                toast: toast,
                success: success,
                custom: custom,
            }
        } 

        */
    </script> -->

</body>

</html>
{{end}}